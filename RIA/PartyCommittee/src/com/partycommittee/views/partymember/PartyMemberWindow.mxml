<?xml version="1.0" encoding="utf-8"?>
<control:EscapeWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx" 
					  xmlns:control="com.partycommittee.control.*"
					  horizontalAlign="center" verticalAlign="middle"
					  showCloseButton="true" 
					  title="建立党员" titleStyleName="panelTitle"
					  close="PopupMgr.instance.removeWindow(this)" 
					  xmlns:button="com.partycommittee.control.button.*"
					  horizontalScrollPolicy="off" verticalScrollPolicy="off" 
					  xmlns:component="com.partycommittee.views.partymember.component.*"
					  creationComplete="onCreationCompleted()">
	<fx:Script>
		<![CDATA[
			import com.partycommittee.events.PcMemberEvent;
			import com.partycommittee.manager.popup.PopupMgr;
			import com.partycommittee.util.CRUDEventType;
			import com.partycommittee.util.DutyCodeUtil;
			import com.partycommittee.util.SexCodeUtil;
			import com.partycommittee.vo.PcMemberVo;
			
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			
			[Bindable]
			public var type:String = CRUDEventType.CREATE;
			
			public var parentView:PartyMemberView;
			
			private var _memberVo:PcMemberVo;
			[Bindable]
			public function get memberVo():PcMemberVo {
				return this._memberVo;
			}
			public function set memberVo(value:PcMemberVo):void {
				this._memberVo = value;
			}
			
			private function onCreationCompleted():void {
				updateData();
			}
			
			private function updateData():void {
				if (!this._memberVo) {
					return;
				}
				addressTxt.text = this._memberVo.address;
				if (this._memberVo.birthday) {
					birthdayDateField.selectedDate = this._memberVo.birthday;
				}
				birthplaceTxt.text = this._memberVo.birthPlace;
				dutyCmb.selectedItem = this._memberVo.dutyId;
				eduBox.eduId = this._memberVo.eduId;
				if (this._memberVo.joinday) {
					joinDateField.selectedDate = this._memberVo.joinday;
				}
				nameTxt.text = this._memberVo.name;
				nationTxt.text = this._memberVo.nation;
				sexCmb.selectedItem = this._memberVo.sexId;
				if (this._memberVo.workday) {
					workDateField.selectedDate = this._memberVo.workday;
				}
			}
			
			private function save():void {
				if (type == CRUDEventType.CREATE) {
					doCreate();
				} else {
					doUpdate();
				}
			}
			
			private function doCreate():void {
				var newMember:PcMemberVo = getNewMember();
				var memberEvt:PcMemberEvent = new PcMemberEvent(CRUDEventType.CREATE, newMember);
				memberEvt.successCallback = onSuccessCallback;
				memberEvt.failureCallback = onFailureCallback;
				this.enabled = false;
				memberEvt.dispatch();
			}
			
			private function doUpdate():void {
				var updateMember:PcMemberVo = getUpdateMember();
				var memberEvt:PcMemberEvent = new PcMemberEvent(CRUDEventType.UPDATE, updateMember);
				memberEvt.successCallback = onSuccessCallback;
				memberEvt.failureCallback = onFailureCallback;
				this.enabled = false;
				memberEvt.dispatch();
			}
			
			private function onSuccessCallback(data:Object, evt:PcMemberEvent):void {
				this.enabled = true;
				parentView.updateData();
				this.close();
			}
			
			private function onFailureCallback(info:Object, evt:PcMemberEvent):void {
				this.enabled = true;
				Alert.show(info.toString());
			}
			
			private function getNewMember():PcMemberVo {
				var newMember:PcMemberVo = new PcMemberVo();
				newMember.active = 1;
				newMember.address = addressTxt.text;
				newMember.agencyId = parentView.agency.id;
				newMember.birthday = birthdayDateField.selectedDate;
				newMember.birthPlace = birthplaceTxt.text;
				newMember.dutyId = dutyCmb.selectedItem as Number;
				newMember.eduId = eduBox.eduId;
				newMember.joinday = joinDateField.selectedDate;
				newMember.name = nameTxt.text;
				newMember.nation = nationTxt.text;
				newMember.sexId = sexCmb.selectedItem as Number;
				newMember.workday = workDateField.selectedDate;
				return newMember;
			}
			
			private function getUpdateMember():PcMemberVo {
				var updateMember:PcMemberVo = getNewMember();
				updateMember.id = memberVo.id;
				return updateMember;
			}
			
			private function sexLblFunc(item:Object):String {
				return SexCodeUtil.getSexCodeDes(item as Number);
			}
			
			private function dutyLblFunc(item:Object):String {
				return DutyCodeUtil.getDutyCodeDes(item as Number);
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<mx:VBox height="100%" width="100%"
			 horizontalAlign="center" verticalAlign="middle"
			 horizontalScrollPolicy="off" verticalScrollPolicy="off">
		<mx:Form width="600" height="100%"
				 minWidth="200"
				 horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:FormItem label="姓名:" required="true" width="100%">
				<mx:TextInput id="nameTxt" width="100%"/>
			</mx:FormItem>
			<mx:FormItem label="性别:" width="100%">
				<mx:ComboBox id="sexCmb" width="100%" maxWidth="100"
							 labelFunction="sexLblFunc"
							 dataProvider="{PCConst.SexList}"/>
			</mx:FormItem>
			<mx:FormItem label="民族:" required="true" width="100%">
				<mx:TextInput id="nationTxt" width="100%"/>
			</mx:FormItem>
			<mx:FormItem label="出生年月:" required="true" width="100%">
				<mx:DateField id="birthdayDateField" width="150"
							  formatString="YYYY-MM-DD"/>
			</mx:FormItem>
			<mx:FormItem label="籍贯:" width="100%">
				<mx:TextInput id="birthplaceTxt" width="100%"/>
			</mx:FormItem>
			<mx:FormItem label="文化程度:" width="100%">
				<component:ChooseEduBox id="eduBox" width="100%"/>
			</mx:FormItem>
			<mx:FormItem label="职务:" width="100%">
				<mx:ComboBox id="dutyCmb" width="100%" maxWidth="100"
							 labelFunction="dutyLblFunc"
							 dataProvider="{PCConst.dutyList}"/>
			</mx:FormItem>
			<mx:FormItem label="何时入党:" required="true" width="100%">
				<mx:DateField id="joinDateField" width="150"
							  formatString="YYYY-MM-DD"/>
			</mx:FormItem>
			<mx:FormItem label="参加工作时间:" required="true" width="100%">
				<mx:DateField id="workDateField" width="150"
							  formatString="YYYY-MM-DD"/>
			</mx:FormItem>
			<mx:FormItem label="现在家庭住址:" width="100%">
				<mx:TextArea id="addressTxt" width="100%" height="60"/>
			</mx:FormItem>
			<mx:FormItem label="备注:" width="100%">
				<mx:TextArea id="commentTxt" width="100%" height="60"/>
			</mx:FormItem>
		</mx:Form>
		<mx:ControlBar width="100%" horizontalAlign="center">
			<button:PcButton label="保存" click="save()"/>
			<button:PcButton label="取消" click="close()"/>
		</mx:ControlBar>
	</mx:VBox>
</control:EscapeWindow>
