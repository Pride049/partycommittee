<?xml version="1.0" encoding="utf-8"?>
<navigation:NavigationView  xmlns:fx="http://ns.adobe.com/mxml/2009" 
							xmlns:s="library://ns.adobe.com/flex/spark" 
							xmlns:mx="library://ns.adobe.com/flex/mx"
							styleName="mainCanvas"
							width="100%" height="100%" 
							xmlns:button="com.partycommittee.control.button.*" 
							xmlns:datagrid="com.partycommittee.control.datagrid.*"
							xmlns:navigation="com.partycommittee.manager.navigation.*" 
							xmlns:pagebar="com.partycommittee.control.pagebar.*"
							creationComplete="onCreationCompleted()">
	
	<fx:Script>
		<![CDATA[
			import com.lnczx.utils.ExportExcel;
			import com.lnczx.utils.ExportExcelExtend;
			import com.partycommittee.events.PcParentStatEvent;
			import com.partycommittee.events.PcStatEvent;
			import com.partycommittee.manager.popup.PopupMgr;
			import com.partycommittee.model.ModelLocator;
			import com.partycommittee.util.CRUDEventType;
			import com.partycommittee.util.DataproviderFactory;
			import com.partycommittee.util.LblFunctionHelper;
			
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.containers.TabNavigator;
			import mx.controls.Alert;
			import mx.controls.DataGrid;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.events.PropertyChangeEvent;
			import mx.managers.PopUpManager;
			
			public var tab:TabNavigator;
			
			[Bindable]
			private var model:ModelLocator = ModelLocator.getInstance();

			private var datas:ArrayCollection = new ArrayCollection();			
			
			private function onCreationCompleted():void {
				if (yearCmb) {
					yearCmb.dataProvider = DataproviderFactory.getRangeYearForReport();
					yearCmb.selectedItem = model.reportYear = new Date().getFullYear();
				}
				
				if (startMonthCmb) {
					startMonthCmb.dataProvider = createMonthDp();
					startMonthCmb.selectedIndex = 0;
				}	
				
				if (endMonthCmb) {
					endMonthCmb.dataProvider = createMonthDp();
					endMonthCmb.selectedIndex = new Date().getMonth();
				}				

			}
			
			private function createMonthDp():ArrayCollection {
				var monthCollection:ArrayCollection = new ArrayCollection();
				for (var i:Number = 1; i <= 12; i++) {
					monthCollection.addItem(i);
				}
				return monthCollection;
			}			
			

			public function updateData():void {
				if (model && model.focusAgencyVo) {
					if (model.focusAgencyVo && model.focusAgencyVo.codeId == 10) {
						var evt:PcStatEvent = new PcStatEvent(PcStatEvent.GET_ZB_STAT_BY_ID);
						evt.agencyId = model.focusAgencyVo.id;
						evt.year = yearCmb.selectedItem as Number;
						evt.startMonth = startMonthCmb.selectedItem as Number;
						evt.endMonth = endMonthCmb.selectedItem as Number;
						evt.successCallback = onGetStatSuccess;
						evt.failureCallback = onGetStatFailure;
						this.enabled = false;
						evt.dispatch();
					}
				}					
			}
			
			private function onGetStatSuccess(data:Object, evt:PcStatEvent):void {
				this.enabled = true;
				if (!data) return;
				initDp(data as ArrayCollection);
			}
			
			private function onGetStatFailure(info:Object, evt:PcStatEvent):void {
				this.enabled = true;
			}			
			
			public function initDp(dp:ArrayCollection):void {

				datas.removeAll();
				var tmpId:int = 0;
				var vo:Object = new Object();
								
				for(var i:int = 0; i<dp.length; i++) {
					var vo:Object = new Object();
					vo.name = dp.getItemAt(i).name;
					vo.agencyId = dp.getItemAt(i).agencyId;
					vo.typeId = dp.getItemAt(i).typeId;
					if (dp.getItemAt(i).typeId == 1 || dp.getItemAt(i).typeId == 4) {
						vo.standard = '1次/年';
						vo.reported = dp.getItemAt(i).reported;
						vo.reported_rate = dp.getItemAt(i).reportedRate;
						vo.total = '';
						vo.total_success = dp.getItemAt(i).totalSuccess;
						vo.total_return = dp.getItemAt(i).totalReturn;
						vo.total_delay = dp.getItemAt(i).totalDelay;
						vo.attend_rate = '';
						vo.eva = dp.getItemAt(i).eva;
						
						vo.eva_1 = dp.getItemAt(i).eva1;
						vo.eva_2 = dp.getItemAt(i).eva2;
						vo.eva_3 = dp.getItemAt(i).eva3;
						vo.eva_4 = dp.getItemAt(i).eva4;
					} else 	if (dp.getItemAt(i).typeId == 2 || dp.getItemAt(i).typeId == 3) {
						vo.standard = '1次/季度';
						vo.reported = dp.getItemAt(i).reported;
						vo.reported_rate = dp.getItemAt(i).reportedRate;
						vo.total = '';
						vo.total_success = dp.getItemAt(i).totalSuccess;
						vo.total_return = dp.getItemAt(i).totalReturn;
						vo.total_delay = dp.getItemAt(i).totalDelay;
						vo.attend_rate = '';
						vo.eva = dp.getItemAt(i).eva;
						
						vo.eva_1 = dp.getItemAt(i).eva1;
						vo.eva_2 = dp.getItemAt(i).eva2;
						vo.eva_3 = dp.getItemAt(i).eva3;
						vo.eva_4 = dp.getItemAt(i).eva4;
					} else if (dp.getItemAt(i).typeId == 9) {
						vo.standard = '';
						vo.reported = ''
						vo.reported_rate = ''
						vo.total = dp.getItemAt(i).total;
						vo.total_success = dp.getItemAt(i).totalSuccess;
						vo.total_return = dp.getItemAt(i).totalReturn;
						vo.total_delay = dp.getItemAt(i).totalDelay;
						vo.attend_rate = dp.getItemAt(i).attendRate;
						vo.eva = dp.getItemAt(i).eva;
						vo.eva_1 = dp.getItemAt(i).eva1;
						vo.eva_2 = dp.getItemAt(i).eva2;
						vo.eva_3 = dp.getItemAt(i).eva3;
						vo.eva_4 = dp.getItemAt(i).eva4;
					} else if (dp.getItemAt(i).typeId == 8) {
						vo.standard = '1次/月';
						vo.reported = dp.getItemAt(i).reported;
						vo.reported_rate = dp.getItemAt(i).reportedRate;
						vo.total = dp.getItemAt(i).total;
						vo.total_success = dp.getItemAt(i).totalSuccess;
						vo.total_return = dp.getItemAt(i).totalReturn;
						vo.total_delay = dp.getItemAt(i).totalDelay;
						vo.attend_rate = dp.getItemAt(i).attendRate;
						vo.eva = dp.getItemAt(i).eva;
						vo.eva_1 = dp.getItemAt(i).eva1;
						vo.eva_2 = dp.getItemAt(i).eva2;
						vo.eva_3 = dp.getItemAt(i).eva3;
						vo.eva_4 = dp.getItemAt(i).eva4;						
					} else {
						vo.standard = '1次/季度';
						vo.reported = dp.getItemAt(i).reported;
						vo.reported_rate = dp.getItemAt(i).reportedRate;
						vo.total = dp.getItemAt(i).total;
						vo.total_success = dp.getItemAt(i).totalSuccess;
						vo.total_return = dp.getItemAt(i).totalReturn;
						vo.total_delay = dp.getItemAt(i).totalDelay;
						vo.attend_rate = dp.getItemAt(i).attendRate;
						vo.eva = dp.getItemAt(i).eva;
						vo.eva_1 = dp.getItemAt(i).eva1;
						vo.eva_2 = dp.getItemAt(i).eva2;
						vo.eva_3 = dp.getItemAt(i).eva3;
						vo.eva_4 = dp.getItemAt(i).eva4;							
					}
					datas.addItem(vo);
				}
				
				zbStatsDG.dataProvider = datas;
			}			
			
			
			
			private function exportToExcel():void {
				ExportExcelExtend.loadDGInExcel(zbStatsDG,'excelExport.jsp', "组织生活统计表");
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<mx:VBox width="100%" height="100%"
			 horizontalScrollPolicy="off" verticalScrollPolicy="off">
		<mx:HBox >		
			<mx:Label text="选择年份:"/>
			<mx:ComboBox id="yearCmb"/>
			<mx:Label text="开始月份:"/>
			<mx:ComboBox id="startMonthCmb" />
			<mx:Label text="结束月份:"/>
			<mx:ComboBox id="endMonthCmb" />
			<mx:Button label="查看统计" click="updateData()"/>
			<mx:Button label="导出到Excel" click="exportToExcel()"/>
		</mx:HBox>		

		<mx:AdvancedDataGrid id="zbStatsDG" designViewDataType="flat" horizontalScrollPolicy="auto"
							 verticalScrollPolicy="auto"
							 width="100%" height="100%" color="0x323232"  
							 minWidth="640" minHeight="480"   
							 sortableColumns="false" sortExpertMode="true"
							 variableRowHeight="true"
							 lockedColumnCount="1"
							 >  
			<mx:groupedColumns>   
				
				<mx:AdvancedDataGridColumn dataField="type_id" width="140" headerRenderer="com.partycommittee.renderers.headZbStatRenderer" labelFunction="{LblFunctionHelper.workPlanTypeLblFunc}" textAlign="left" headerWordWrap="true" wordWrap="true"/>
				
				<mx:AdvancedDataGridColumnGroup headerText="组织生活落实情况" headerWordWrap="true">  
					<mx:AdvancedDataGridColumn dataField="standard" headerText="应召开\上报情况" width="140"  textAlign="left" headerWordWrap="true" wordWrap="true"/>
					<mx:AdvancedDataGridColumn dataField="reported" headerText="规范执行情况"  headerWordWrap="true" textAlign="right" />
					<mx:AdvancedDataGridColumn dataField="reported_rate" headerText="规范执行率"  headerWordWrap="true" textAlign="right" itemRenderer="com.partycommittee.renderers.DataGridPercentRenderer" />
					<mx:AdvancedDataGridColumn dataField="total" headerText="实际召开数"  headerWordWrap="true" textAlign="right" />
					<mx:AdvancedDataGridColumn dataField="total_success" headerText="一次成功上报数"  headerWordWrap="true" textAlign="right"/>
					<mx:AdvancedDataGridColumn dataField="total_return" headerText="驳回后上报数"  headerWordWrap="true" textAlign="right"/>
					<mx:AdvancedDataGridColumn dataField="total_delay" headerText="逾期授权后上报数"  headerWordWrap="true" textAlign="right"/>
					
					<mx:AdvancedDataGridColumn dataField="attend_rate" headerText="出席率"  headerWordWrap="true" textAlign="right" itemRenderer="com.partycommittee.renderers.DataGridPercentRenderer"/>
				</mx:AdvancedDataGridColumnGroup>
				
				<mx:AdvancedDataGridColumnGroup headerText="上级审核评价情况" headerWordWrap="true">  
					<mx:AdvancedDataGridColumn dataField="eva" headerText="上级评价数"  headerWordWrap="true" textAlign="right"/>
					<mx:AdvancedDataGridColumnGroup headerText="评价等次分布" headerWordWrap="true"> 
						<mx:AdvancedDataGridColumn dataField="eva_1" headerText="好"  headerWordWrap="true" textAlign="right"/>
						<mx:AdvancedDataGridColumn dataField="eva_2" headerText="较好"  headerWordWrap="true" textAlign="right"/>
						<mx:AdvancedDataGridColumn dataField="eva_3" headerText="一般"  headerWordWrap="true" textAlign="right"/>
						<mx:AdvancedDataGridColumn dataField="eva_4" headerText="差"  headerWordWrap="true" textAlign="right"/>
					</mx:AdvancedDataGridColumnGroup>
				</mx:AdvancedDataGridColumnGroup>
			</mx:groupedColumns>  
		</mx:AdvancedDataGrid>
		
		
	</mx:VBox>
	
</navigation:NavigationView>
