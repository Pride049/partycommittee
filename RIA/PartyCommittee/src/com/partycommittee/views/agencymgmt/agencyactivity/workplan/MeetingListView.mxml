<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" 
		   width="100%" height="100%"
		   creationComplete="onCreationCompleted()" 
		   xmlns:button="com.partycommittee.control.button.*">
	<fx:Script>
		<![CDATA[
			import com.partycommittee.events.PcMeetingEvent;
			import com.partycommittee.events.PcWorkPlanEvent;
			import com.partycommittee.manager.popup.PopupMgr;
			import com.partycommittee.util.DataproviderFactory;
			import com.partycommittee.util.LblFunctionHelper;
			import com.partycommittee.util.WorkPlanCodeUtil;
			import com.partycommittee.vo.PcAgencyVo;
			import com.partycommittee.vo.PcMeetingVo;
			import com.partycommittee.vo.PcWorkPlanVo;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			[Bindable]
			public var enableNewMeeting:Boolean = false;
			
			[Bindable]
			private var dp:ArrayCollection = new ArrayCollection();
			
			private var _agency:PcAgencyVo;
			[Bindable]
			public function get agency():PcAgencyVo {
				return this._agency;
			}
			public function set agency(value:PcAgencyVo):void {
				this._agency = value;
			}
			
			private var _type:Number;
			[Bindable]
			public function get type():Number {
				return this._type;
			}
			public function set type(value:Number):void {
				this._type = value;
			}
			
			private var year:Number;
			
			private function onCreationCompleted():void {
				yearCmb.dataProvider = DataproviderFactory.getRangeYearDp();
				yearCmb.selectedItem = year = new Date().getFullYear();
				addEventListener(FlexEvent.SHOW, onViewShow);
			}
			
			private function onViewShow(event:FlexEvent):void {
				if (agency) {
					updateData();
				}
			}
			
			public function updateData():void {
				switch (type) {
					case PCConst.WORKPLAN_TYPE_CLASS:
						getClassList();
						break;
					case PCConst.WORKPLAN_TYPE_MEETING_BRANCH_COMMITTEE:
						enableNewMeeting = true;
						getBranchCommitteeList();
						break;
					case PCConst.WORKPLAN_TYPE_MEETING_BRANCH_LIFE:
						getBranchLifeList();
						break;
					case PCConst.WORKPLAN_TYPE_MEETING_BRANCH_MEMBER:
						enableNewMeeting = true;
						getBranchMemberList();
						break;
					case PCConst.WORKPLAN_TYPE_MEETING_OTHER:
						getOtherList();
						break;
//					case PCConst.WORKPLAN_TYPE_MEETING_TEAM:
//						break;
				}
			}
			
			private function getClassList():void {
				var evt:PcMeetingEvent = new PcMeetingEvent(PcMeetingEvent.GET_CLASS_LIST);
				evt.agency = agency;
				evt.year = year;
				evt.successCallback = onClassListSuccess;
				evt.failureCallback = onClassListFailure;
				this.enabled = false;
				evt.dispatch();
			}
			
			private function onClassListSuccess(data:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				dp = data as ArrayCollection;
			}
			
			private function onClassListFailure(info:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				Alert.show(info.toString());
			}
			
			private function getBranchCommitteeList():void {
				var evt:PcMeetingEvent = new PcMeetingEvent(PcMeetingEvent.GET_BRANCH_COMMITTEE_LIST);
				evt.agency = agency;
				evt.year = year;
				evt.successCallback = onBranchCommitteeListSuccess;
				evt.failureCallback = onBranchCommitteeListFailure;
				this.enabled = false;
				evt.dispatch();
			}
			
			private function onBranchCommitteeListSuccess(data:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				dp = data as ArrayCollection;
			}
			
			private function onBranchCommitteeListFailure(info:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				Alert.show(info.toString());
			}
			
			private function getBranchLifeList():void {
				var evt:PcMeetingEvent = new PcMeetingEvent(PcMeetingEvent.GET_BRANCH_LIFE_LIST);
				evt.agency = agency;
				evt.year = year;
				evt.successCallback = onBranchLifeListSuccess;
				evt.failureCallback = onBranchLifeListFailure;
				this.enabled = false;
				evt.dispatch();
			}
			
			private function onBranchLifeListSuccess(data:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				dp = data as ArrayCollection;
			}
			
			private function onBranchLifeListFailure(info:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				dp = data as ArrayCollection;
			}
			
			private function getBranchMemberList():void {
				var evt:PcMeetingEvent = new PcMeetingEvent(PcMeetingEvent.GET_BRANCH_MEMBER_LIST);
				evt.agency = agency;
				evt.year = year;
				evt.successCallback = onBranchMemberListSuccess;
				evt.failureCallback = onBranchMemberListFailure;
				this.enabled = false;
				evt.dispatch();
			}
			
			private function onBranchMemberListSuccess(data:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				dp = data as ArrayCollection;
			}
			
			private function onBranchMemberListFailure(info:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				Alert.show(info.toString());
			}
			
			private function getOtherList():void {
				var evt:PcMeetingEvent = new PcMeetingEvent(PcMeetingEvent.GET_OTHER_LIST);
				evt.agency = agency;
				evt.year = year;
				evt.successCallback = onOtherListSuccess;
				evt.failureCallback = onOtherListFailure;
				this.enabled = false;
				evt.dispatch();
			}
			
			private function onOtherListSuccess(data:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				this.dp = data as ArrayCollection;
			}
			
			private function onOtherListFailure(info:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				Alert.show(info.toString());
			}
			
			public function editMeeting(meeting:PcMeetingVo):void {
				var win:MeetingView = new MeetingView();
				win.agency = agency;
				win.meeting = meeting;
				win.meetingType = type;
				win.parentView = this;
				PopupMgr.instance.popupWindow(win);
			}
			
			public function submitMeeting(meeting:PcMeetingVo):void {
				var evt:PcMeetingEvent = new PcMeetingEvent(PcMeetingEvent.SUBMIT_MEETING);
				evt.meeting = meeting;
				evt.successCallback = onSubmitMeetingSuccess;
				evt.failureCallback = onSubmitMeetingFailure;
				this.enabled = false;
				evt.dispatch();
			}
			
			private function onSubmitMeetingSuccess(data:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				updateData();
			}
			
			private function onSubmitMeetingFailure(info:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				Alert.show(info.toString());
			}
			
			public function browseMeeting(meeting:PcMeetingVo):void {
				var win:MeetingView = new MeetingView();
				win.detailMode = true;
				win.agency = agency;
				win.meeting = meeting;
				win.meetingType = type;
				win.parentView = this;
				PopupMgr.instance.popupWindow(win);
			}
			
			private function onNewMeetingClick():void {
				var win:MeetingView = new MeetingView();
				win.agency = agency;
				win.meetingType = type;
				win.parentView = this;
				PopupMgr.instance.popupWindow(win);
			}
			
			private function onYearCmbChanged():void {
				year = yearCmb.selectedItem as Number;
				updateData();
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<mx:VBox height="100%" width="100%">
		<mx:AdvancedDataGrid id="dg" dataProvider="{dp}" width="100%" height="100%">
			<mx:columns>
				<mx:AdvancedDataGridColumn headerText="年度" dataField="year"/>
				<mx:AdvancedDataGridColumn headerText="季度" dataField="quarter" 
										   labelFunction="{LblFunctionHelper.workPlanQuarterLblFunc}"/>
				<mx:AdvancedDataGridColumn headerText="会议" dataField="typeId"
										   labelFunction="{LblFunctionHelper.workPlanTypeLblFunc}"/>
				<mx:AdvancedDataGridColumn headerText="状态" dataField="statusId"
										   labelFunction="{LblFunctionHelper.workPlanStatusLblFunc}"/>
				<mx:AdvancedDataGridColumn headerText="操作">
					<mx:itemRenderer>
						<fx:Component>
							<mx:Box horizontalAlign="center" verticalAlign="middle"
									horizontalScrollPolicy="off" verticalScrollPolicy="off">
								<fx:Script>
									<![CDATA[
										import com.partycommittee.vo.PcMeetingVo;
										
										protected function editBtnClick():void {
											outerDocument.editMeeting(data as PcMeetingVo);
										}
									]]>
								</fx:Script>
								<button:PcButton id="editBtn" label="修改" click="editBtnClick()"
												 enabled="{(data as PcMeetingVo).statusId != 1}"/>
							</mx:Box>
						</fx:Component>
					</mx:itemRenderer>
				</mx:AdvancedDataGridColumn>
				<mx:AdvancedDataGridColumn headerText="上报">
					<mx:itemRenderer>
						<fx:Component>
							<mx:Box horizontalAlign="center" verticalAlign="middle"
									horizontalScrollPolicy="off" verticalScrollPolicy="off">
								<fx:Script>
									<![CDATA[
										import com.partycommittee.vo.PcMeetingVo;
										
										protected function submitBtnClick():void {
											outerDocument.submitMeeting(data as PcMeetingVo);
										}
									]]>
								</fx:Script>
								<button:PcButton id="submitBtn" label="上报" click="submitBtnClick()"
												 enabled="{(data as PcMeetingVo).statusId != 1 &amp;&amp; (data as PcMeetingVo).id}"/>
							</mx:Box>
						</fx:Component>
					</mx:itemRenderer>
				</mx:AdvancedDataGridColumn>
				<mx:AdvancedDataGridColumn headerText="查看">
					<mx:itemRenderer>
						<fx:Component>
							<mx:Box horizontalAlign="center" verticalAlign="middle"
									horizontalScrollPolicy="off" verticalScrollPolicy="off">
								<fx:Script>
									<![CDATA[
										import com.partycommittee.vo.PcMeetingVo;
										
										protected function detailBtnClick():void {
											outerDocument.browseMeeting(data as PcMeetingVo);
										}
									]]>
								</fx:Script>
								<button:PcButton id="submitBtn" label="查看" click="detailBtnClick()"
												 enabled="{(data as PcMeetingVo).id != 0}"/>
							</mx:Box>
						</fx:Component>
					</mx:itemRenderer>
				</mx:AdvancedDataGridColumn>
			</mx:columns>
		</mx:AdvancedDataGrid>
		<mx:ControlBar width="100%" height="32"
					   horizontalAlign="right">
			<mx:Label text="选择年份:"/>
			<mx:ComboBox id="yearCmb" change="onYearCmbChanged()"/>
			<mx:VRule height="90%" visible="{enableNewMeeting}" includeInLayout="{enableNewMeeting}"/>
			<mx:Button id="createMeetingBtn" label="新建会议" click="onNewMeetingClick()"
					   visible="{enableNewMeeting}" includeInLayout="{enableNewMeeting}"/>
		</mx:ControlBar>
	</mx:VBox>
	
</mx:Canvas>
