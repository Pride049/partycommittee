<?xml version="1.0" encoding="utf-8"?>
<control:EscapeWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx" 
					  xmlns:control="com.partycommittee.control.*"
					  horizontalAlign="center" verticalAlign="middle"
					  showCloseButton="true" titleStyleName="panelTitle"
					  close="PopupMgr.instance.removeWindow(this)" 
					  height="650" width="800"
					  creationComplete="onCreationCompleted()"
					  xmlns:button="com.partycommittee.control.button.*" 
					  xmlns:richtexttoolbar="com.partycommittee.control.richtexttoolbar.*" 
					  xmlns:component="com.partycommittee.views.agencymgmt.agencyactivity.workplan.component.*">
	<fx:Script>
		<![CDATA[
			import com.lnczx.utils.DateUtilExt;
			import com.partycommittee.events.PcMeetingEvent;
			import com.partycommittee.events.PcRemindLockEvent;
			import com.partycommittee.events.PcWorkPlanEvent;
			import com.partycommittee.manager.popup.PopupMgr;
			import com.partycommittee.model.ModelLocator;
			import com.partycommittee.util.CRUDEventType;
			import com.partycommittee.util.DataproviderFactory;
			import com.partycommittee.util.DateUtil;
			import com.partycommittee.util.WorkPlanCodeUtil;
			import com.partycommittee.util.WorkPlanStatusUtil;
			import com.partycommittee.vo.PcAgencyVo;
			import com.partycommittee.vo.PcMeetingContentVo;
			import com.partycommittee.vo.PcMeetingVo;
			import com.partycommittee.vo.PcRemindConfigVo;
			import com.partycommittee.vo.PcRemindLockVo;
			import com.partycommittee.vo.PcWorkPlanContentVo;
			import com.partycommittee.vo.PcWorkPlanVo;
			
			import flashx.textLayout.debug.assert;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			
			[Bindable]
			private var workPlanStatusLbl:String;
			
			private var isNew:Boolean = true;
			
			[Bindable]
			private var isCustom:Boolean = false;
			
			[Bindable]
			public var detailMode:Boolean = false;
			
			[Bindable]
			private var year:Number = new Date().getFullYear();
			[Bindable]
			private var quarter:Number = 1;
			[Bindable]
			private var month:Number = 1;
			
			[Bindable]
			private var yearDp:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var quarterDp:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var monthDp:ArrayCollection = new ArrayCollection();
			
			private var _meetingType:Number;
			[Bindable]
			public function get meetingType():Number {
				return this._meetingType;
			}
			public function set meetingType(value:Number):void {
				this._meetingType = value;
			}
			
			private var _meeting:PcMeetingVo;
			[Bindable]
			public function get meeting():PcMeetingVo {
				return this._meeting;
			}
			public function set meeting(value:PcMeetingVo):void {
				this._meeting = value;
			}
			
			private var _agency:PcAgencyVo;
			[Bindable]
			public function get agency():PcAgencyVo {
				return this._agency;
			}
			public function set agency(value:PcAgencyVo):void {
				this._agency = value;
			}
			
			private var _parentView:MeetingListView;
			[Bindable]
			public function get parentView():MeetingListView {
				return this._parentView;
			}
			public function set parentView(value:MeetingListView):void {
				this._parentView = value;
			}
			
			private function onCreationCompleted():void {
				updateData();
			}
			
			private function updateData():void {
				if (!agency) {
					return;
				}
				
				switch (meetingType) {
					case PCConst.WORKPLAN_TYPE_CLASS:
						title = "党课";
						break;
					case PCConst.WORKPLAN_TYPE_MEETING_BRANCH_COMMITTEE:
						title = "支部委员会";
						break;
					case PCConst.WORKPLAN_TYPE_MEETING_BRANCH_LIFE:
						title = "支部生活会";
						break;
					case PCConst.WORKPLAN_TYPE_MEETING_BRANCH_MEMBER:
						title = "支部党员大会";
						break;
					case PCConst.WORKPLAN_TYPE_MEETING_OTHER:
						title = "其他";
						break;
//					case PCConst.WORKPLAN_TYPE_MEETING_TEAM:
//						break;
				}
				
//				if (meetingType == PCConst.WORKPLAN_TYPE_CLASS) {
//					personLbl.text = "授课人:";
//				} else {
					personLbl.text = "主持人:";
//				}
				
				if (meetingType == PCConst.WORKPLAN_TYPE_MEETING_OTHER) {
					meetingTitleBox.visible = meetingTitleBox.includeInLayout = false;
					otherMeetingTitleBox.visible = otherMeetingTitleBox.includeInLayout = true;
				} else {
					meetingTitleBox.visible = meetingTitleBox.includeInLayout = true;
					otherMeetingTitleBox.visible = otherMeetingTitleBox.includeInLayout = false;
				}
				
				if (meeting && meeting.id) {
					isNew = false;
					workPlanStatusLbl = WorkPlanStatusUtil.getWorkPlanStatusDes(meeting.statusId);
					if (workPlanStatusLbl != "") {
						workPlanStatusLbl = " (" + workPlanStatusLbl + ")";
					}
					year = meeting.year;
					quarter = meeting.quarter;
					meetingNameTxt.text = meeting.meetingName;
					dateField.selectedDate = meeting.meetingDatetime;
					themeTxt.text = meeting.theme;
					attendTxt.text = meeting.attend + "";
					asenceTxt.text = meeting.asence + "";
					asenceMembersTxt.text = meeting.asenceMemberIds;
					
					if (meeting.statusId == 0 || meeting.statusId == 1) {
						meetingViewStack.selectedChild = reportForm;
						if (meeting.content) {
							personTxt.text = meeting.content.memberName;
							textArea.htmlText = meeting.content.content;
						} else {
							loadMeetingContent();
						}
						initRemindLock();
						
					} else {
						meetingViewStack.selectedChild = browseForm;
						if (meeting.content) {
							b_textArea.htmlText = meeting.content.content;
							if (meeting.statusId == 4) {
								getMeetingComment();
							}							
						} else {
							loadMeetingContent();
						}						
					}
				} else {
					isNew = true;
					meetingViewStack.selectedChild = reportForm;
					if (!meeting) {
						isCustom = true;
						
						// Hold meeting with random datetime.
						yearDp = DataproviderFactory.getYearDp();
						quarterDp = DataproviderFactory.createQuarterDp();
						monthDp = DataproviderFactory.createMonthDp();
						yearCmb.selectedItem = year = new Date().getFullYear();
						monthCmb.selectedItem = month = 1;
						quarterCmb.selectedItem = quarter = 1;
					}
					initRemindLock();
				}
				
				
			}
			
			private function getMeetingComment():void {
				var meetingEvt:PcMeetingEvent = new PcMeetingEvent(PcMeetingEvent.GET_MEETING_COMMENT);
				meetingEvt.meeting = meeting;
				meetingEvt.successCallback = onGetMeetingCommentSuccess;
				meetingEvt.failureCallback = onGetMeetingCommentFailure;
				this.enabled = false;
				meetingEvt.dispatch();
			}
			
			private function onGetMeetingCommentSuccess(data:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				var meetingContent:PcMeetingContentVo = data as PcMeetingContentVo;
				if (!meetingContent) {
					return;
				}
				b_textArea_eva.htmlText = meetingContent.content;
				b_personTxt.text = "评价人" + meetingContent.memberName;
				dateTxt.text = "评价日期:" + DateUtil.toISOString(meetingContent.updateTime);
			}
			
			private function onGetMeetingCommentFailure(info:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				Alert.show("获取内容失败！");
			}			
			
			private function loadMeetingContent():void {
				var evt:PcMeetingEvent = new PcMeetingEvent(PcMeetingEvent.GET_MEETING_CONTENT);
				evt.meeting = meeting;
				evt.successCallback = onLoadContentSuccess;
				evt.failureCallback = onLoadContentFailure;
				this.enabled = false;
				evt.dispatch();
			}
			
			private function onLoadContentSuccess(data:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				meeting.content = data as PcMeetingContentVo;
				
				personTxt.text = meeting.content.memberName;

				if (meetingViewStack.selectedChild == reportForm) {
					textArea.htmlText = meeting.content.content;
				}
				if (meetingViewStack.selectedChild == browseForm) {
					b_textArea.htmlText = meeting.content.content;
				}
			}
			
			private function onLoadContentFailure(info:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				Alert.show("读取会议内容失败！");
			}
			
			private function onSaveAndCommit():void {
				if (!isNew) {
					doUpdate(true);
				} else {
					doCreate(true);
				}
			}
			
			private function onSaveWithoutSubmit():void {
				if (!isNew) {
					doUpdate();
				} else {
					doCreate();
				}
			}
			
			private function doUpdate(isCommit:Boolean = false):void {
				var meetingEvt:PcMeetingEvent = new PcMeetingEvent(CRUDEventType.UPDATE);
				meeting = getUpdateMeeting();
				meeting.statusId = isCommit ? 2 : 1;
				meetingEvt.meeting = meeting;
				meetingEvt.successCallback = onMeetingUpdateSuccess;
				meetingEvt.failureCallback = onMeetingUpdateFailure;
				this.enabled = false;
				meetingEvt.dispatch();
			}
			
			private function doCreate(isCommit:Boolean = false):void {
				var meetingEvt:PcMeetingEvent = new PcMeetingEvent(CRUDEventType.CREATE);
				var newMeeting:PcMeetingVo = getNewMeeting();
				newMeeting.statusId = isCommit ? 2 : 1;
				meetingEvt.meeting = newMeeting;
				meetingEvt.successCallback = onMeetingCreateSuccess;
				meetingEvt.failureCallback = onMeetingCreateFailure;
				this.enabled = false;
				meetingEvt.dispatch();
			}
			
			private function onMeetingCreateSuccess(data:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				parentView.updateData();
				this.close();
			}
			
			private function onMeetingCreateFailure(info:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				Alert.show("保存会议内容失败！");
			}
			
			private function onMeetingUpdateSuccess(data:Object, workPlanEvt:PcMeetingEvent):void {
				this.enabled = true;
				parentView.updateData();
				this.close();
			}
			
			private function onMeetingUpdateFailure(info:Object, workPlanEvt:PcMeetingEvent):void {
				this.enabled = true;
				Alert.show("修改会议内容失败！");
			}
			
			private function getNewMeeting():PcMeetingVo {
				var newMeeting:PcMeetingVo = new PcMeetingVo();
				newMeeting.meetingName = meetingNameTxt.text;
				newMeeting.typeId = meetingType;
				newMeeting.year = year;
				newMeeting.quarter = quarter;
				if (meetingType == PCConst.WORKPLAN_TYPE_MEETING_BRANCH_COMMITTEE) {
					newMeeting.month = month;
				}
				newMeeting.agencyId = agency.id;
				newMeeting.moderator = personTxt.text;
				newMeeting.theme = themeTxt.text;
				newMeeting.attend = Number(attendTxt.text);
				newMeeting.asence = Number(asenceTxt.text);
				newMeeting.asenceMemberIds = asenceMembersTxt.text;
				newMeeting.content = getMeetingContent();
				newMeeting.meetingDatetime = dateField.selectedDate;
				return newMeeting;
			}
			
			private function getUpdateMeeting():PcMeetingVo {
				meeting.meetingName = meetingNameTxt.text;
				meeting.meetingDatetime = dateField.selectedDate;
				meeting.theme = themeTxt.text;
				meeting.moderator = personTxt.text;
				meeting.attend = Number(attendTxt.text);
				meeting.asence = Number(asenceTxt.text);
				meeting.asenceMemberIds = asenceMembersTxt.text;
				meeting.content.memberName = personTxt.text;
				meeting.content.content = textArea.htmlText;
				return meeting;
			}
			
			private function getMeetingContent():PcMeetingContentVo {
				var meetingContent:PcMeetingContentVo = new PcMeetingContentVo();
				meetingContent.content = textArea.htmlText;
				meetingContent.memberName = personTxt.text;
				meetingContent.type = PCConst.WORKFLOW_TYPE_REPORT;
				return meetingContent;
			}
			
			private function onYearCmbChanged():void {
				year = yearCmb.selectedItem as Number;
				initRemindLock();
			}
			
			private function onQuarterCmbChanged():void {
				quarter = quarterCmb.selectedItem as Number;
				initRemindLock();
			}
			
			private function onMonthCmbChanged():void {
				month = monthCmb.selectedItem as Number;
				initRemindLock();
			}
			
			private function onBrowseEvaluate():void {
				var commentView:CommentView = new CommentView();
				commentView.meeting = meeting;
				PopupMgr.instance.popupWindow(commentView);
			}
			
			
			private function initRemindLock():void {
				return;
				var remindLockEvt:PcRemindLockEvent = new PcRemindLockEvent(PcRemindLockEvent.GET_REMIND_LOCK_BY_ID);
				remindLockEvt.agencyId = agency.id;
				remindLockEvt.year = year;
				remindLockEvt.quarter = quarter;
				if (meetingType == 8) {
					remindLockEvt.month = month;
					remindLockEvt.quarter = 0;
				} else {
					remindLockEvt.month = 0;
				}
				remindLockEvt.typeId = meetingType;
				remindLockEvt.successCallback = getRemindLockSuccess;
				remindLockEvt.failureCallback = getRemindLockFailure
				remindLockEvt.dispatch();				
			}
			
			private function setRemindLock():void {
				var vo:PcRemindConfigVo = getRemindVo(meetingType);
				var y:Number = new Date().getFullYear();
				var cur_date = new Date();
				
				if (vo) {
					var endDate:Date = DateUtilExt.beginOfQuarter(year, quarter);
					if (DateUtilExt.after(cur_date, endDate)) {
						btn_commit.label ="已锁定";
						btn_commit.enabled = false;
					} else {
						btn_commit.label ="上报";
						btn_commit.enabled = true;
					}
				}
			}	
			
			private function getRemindLockSuccess(data:Object, evt:PcRemindLockEvent):void {
				if (data) {
					var vo:PcRemindLockVo = data as PcRemindLockVo;
					if (vo.statusId == 9) {
						setRemindLock();
					}
				}
			}
			
			private function getRemindLockFailure(data:Object, evt:PcRemindLockEvent):void {
				if (btn_commit.label == "已锁定") {
					btn_commit.label ="上报";
					btn_commit.enabled = true;
				}
			}		
			
			public function getRemindVo(typeId:Number):PcRemindConfigVo {
				var model:ModelLocator = ModelLocator.getInstance();
				var dd:ArrayCollection = model.remindConfigCollection;
				for(var i = 0; i < dd.length; i++ ) {
					if ( (dd.getItemAt(i) as PcRemindConfigVo).typeId == typeId) {
						return dd.getItemAt(i) as PcRemindConfigVo
					}
				}
				return null;
			}				
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<mx:VBox width="100%" height="100%"
			 left="6" right="6" top="6" bottom="6"
			 horizontalScrollPolicy="off" verticalScrollPolicy="off">
		<mx:HBox id="meetingTitleBox" width="100%" horizontalAlign="center"
				 horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:Label fontSize="20" fontWeight="bold" text="{year + '年度第' + quarter + '季度' + title}"/>
			<mx:Label fontSize="20" fontWeight="bold"
					  text="{workPlanStatusLbl}"/>
		</mx:HBox>
		<mx:HBox id="dateTimeBox" width="100%" verticalAlign="middle"
				 horizontalScrollPolicy="off" verticalScrollPolicy="off"
				 visible="{isCustom}" includeInLayout="{isCustom}">
			<mx:Label text="年份："/>
			<mx:ComboBox id="yearCmb" dataProvider="{yearDp}" change="onYearCmbChanged()"/>
			<mx:Label text="季度:"/>
			<mx:ComboBox id="quarterCmb" dataProvider="{quarterDp}" change="onQuarterCmbChanged()"/>
			<mx:Label text="月份:" 
					  visible="{isCustom &amp;&amp; meetingType == PCConst.WORKPLAN_TYPE_MEETING_BRANCH_COMMITTEE}"
					  includeInLayout="{isCustom &amp;&amp; meetingType == PCConst.WORKPLAN_TYPE_MEETING_BRANCH_COMMITTEE}"/>
			<mx:ComboBox id="monthCmb" dataProvider="{monthDp}" change="onMonthCmbChanged()"
						 visible="{isCustom &amp;&amp; meetingType == PCConst.WORKPLAN_TYPE_MEETING_BRANCH_COMMITTEE}"
						 includeInLayout="{isCustom &amp;&amp; meetingType == PCConst.WORKPLAN_TYPE_MEETING_BRANCH_COMMITTEE}"/>
		</mx:HBox>
		<mx:HBox id="otherMeetingTitleBox" width="100%" horizontalAlign="center"
				 horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:Label text="会议名称:" width="75"/>
			<mx:TextInput id="meetingNameTxt" width="100%"/>
		</mx:HBox>
		<mx:HBox width="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:HBox width="50%"
					 horizontalScrollPolicy="off" verticalScrollPolicy="off">
				<mx:Label text="时    间:" width="75"/>
				<mx:DateField id="dateField" width="100%"
							  formatString="YYYY-MM-DD"/>
			</mx:HBox>
			<mx:HBox width="50%"
					 horizontalScrollPolicy="off" verticalScrollPolicy="off">
				<mx:Label id="personLbl" width="75"/>
				<mx:TextInput id="personTxt" width="100%"/>
			</mx:HBox>
		</mx:HBox>
		<mx:HBox width="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:Label text="内    容:" width="75"/>
			<mx:TextInput id="themeTxt" width="100%"/>
		</mx:HBox>
		<mx:HBox width="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:HBox width="50%"
					 horizontalScrollPolicy="off" verticalScrollPolicy="off">
				<mx:Label text="应到人数:" width="75"/>
				<mx:TextInput id="attendTxt" width="100%" restrict="0-9"/>
			</mx:HBox>
			<mx:HBox width="50%"
					 horizontalScrollPolicy="off" verticalScrollPolicy="off">
				<mx:Label text="缺席人数:" width="75"/>
				<mx:TextInput id="asenceTxt" width="100%" restrict="0-9"/>
			</mx:HBox>
		</mx:HBox>
		<mx:HBox width="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:Label text="缺席人名单:" width="75"/>
			<mx:TextInput id="asenceMembersTxt" width="100%"/>
			<!--
			<component:ChooseAsenceBox id="asenceBox" width="100%" meeting="{meeting}"/>
			-->
		</mx:HBox>
		
		
		<mx:ViewStack id="meetingViewStack" width="100%" height="100%" creationPolicy="all">
			<mx:VBox id="reportForm" width="100%" height="100%"
					 left="6" right="6" top="6" bottom="6"
					 horizontalScrollPolicy="off" verticalScrollPolicy="off">
				<richtexttoolbar:PopupRichTextToolBar width="100%" target="{textArea}"/>
				<mx:TextArea id="textArea" width="100%" height="100%"
							 editable="{!meeting || meeting.statusId == 1}"/>
				<mx:ControlBar width="100%" horizontalAlign="center" verticalAlign="middle">
					<button:PcButton label="暂存" click="onSaveWithoutSubmit()"
									 visible="{!meeting || meeting.statusId == 1}"
									 includeInLayout="{!detailMode}"/>
					<button:PcButton label="上报" id="btn_commit" click="onSaveAndCommit()"
									 visible="{!meeting || meeting.statusId == 1 || meeting.statusId == 0}"
									 includeInLayout="{!detailMode}"/>
					<button:PcButton label="关闭" click="close()"/>
				</mx:ControlBar>
			</mx:VBox>
			
			<mx:VBox id="browseForm" width="100%" height="100%"
					 left="6" right="6" top="6" bottom="6"
					 horizontalScrollPolicy="off" verticalScrollPolicy="off">
				<mx:HBox width="100%" horizontalAlign="left" height="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
					<mx:VBox left="6" right="6" top="6" bottom="6">
						<mx:Label text="会"     />
						<mx:Label text="议"     />
						<mx:Label text="内"     />
						<mx:Label text="容"     />						
					</mx:VBox>						
					<mx:TextArea id="b_textArea" width="100%" height="100%"
								 editable="false"/>
				</mx:HBox>
				
				<mx:HBox id="browseForm_evaluate"  horizontalAlign="left" width="0" height="0" horizontalScrollPolicy="off" verticalScrollPolicy="off" visible="false">
					<mx:VBox left="6" right="6" top="6" bottom="6">
						<mx:Label text="评"     />
						<mx:Label text="价"     />
					</mx:VBox>	
					<mx:VBox width="100%" height="100%">
						<mx:TextArea id="b_textArea_eva" width="100%" height="100%"
									 editable="false"/>	
						<mx:HBox  horizontalCenter="0" width="100%">
							<mx:Label left="0" id="b_personTxt"/>
							<mx:Spacer width="100%"/>
							<mx:Label right="0"   id="dateTxt"/>
						</mx:HBox>							
					</mx:VBox>
				</mx:HBox>
				<mx:ControlBar width="100%" horizontalAlign="center" verticalAlign="middle">
					<button:PcButton label="关闭" click="close()"/>
				</mx:ControlBar>
			</mx:VBox>			
			
		</mx:ViewStack>
	</mx:VBox>
	
</control:EscapeWindow>
