<?xml version="1.0" encoding="utf-8"?>
<navigation:NavigationView xmlns:fx="http://ns.adobe.com/mxml/2009" 
						   xmlns:s="library://ns.adobe.com/flex/spark" 
						   xmlns:mx="library://ns.adobe.com/flex/mx"
						   styleName="mainCanvas"
						   width="100%" height="100%" 
						   xmlns:button="com.partycommittee.control.button.*" 
						   xmlns:datagrid="com.partycommittee.control.datagrid.*"
						   xmlns:navigation="com.partycommittee.manager.navigation.*" 
						   xmlns:component="com.partycommittee.views.agencymgmt.component.*"
						   creationComplete="onCreationCompleted()" 
						   xmlns:agencyviews="com.partycommittee.views.agencymgmt.agencyviews.*" 
						   xmlns:partymember="com.partycommittee.views.partymember.*">
	<fx:Script>
		<![CDATA[
			import com.partycommittee.events.PcMemberEvent;
			import com.partycommittee.events.PcStatEvent;
			import com.partycommittee.model.ModelLocator;
			import com.partycommittee.views.MainContainer;
			import com.partycommittee.vo.PcAgencyVo;
			
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.events.PropertyChangeEvent;
			
			private var _editEnable:Boolean = true;
			[Bindable]
			public function get editEnable():Boolean {
				return this._editEnable;
			}
			public function set editEnable(value:Boolean):void {
				this._editEnable = value;
			}
			
			private var _agency:PcAgencyVo;
			[Bindable]
			public function get agency():PcAgencyVo {
				return this._agency;
			}
			public function set agency(value:PcAgencyVo):void {
				this._agency = value;
			}
			
			[Bindable]
			private var datas:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var model:ModelLocator = ModelLocator.getInstance();
			
			private function onCreationCompleted():void {
//				var obj:Object = this.parent.parent.parent.parent as MainContainer;
//				if (obj.mainViewStack  && obj.mainViewStack.selectedChild == "orgView") {
//					onNavigateIn();
//				}
				
			}
			
			override protected function onNavigateIn():void {
				if (agency != model.focusAgencyVo) {
					agency = model.focusAgencyVo;
					updateData();
				}
				model.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE, onModelChanged);
			}
			
			override protected function onNavigateOut():void {
				model.removeEventListener(PropertyChangeEvent.PROPERTY_CHANGE, onModelChanged);
			}
			
			private function onModelChanged(event:PropertyChangeEvent):void {
				if (event.property == "focusAgencyVo") {
					if (model.isLeafUser && model.focusAgencyVo.codeId != 10) return;
					agency = model.focusAgencyVo;
					updateData();
				}
			}
			
			private function updateData():void {
				if (!this._agency) {
					return;
				}
				
				if (agency.codeId == 10) {
					agencyBaseViewStack.selectedChild = agencyBase;
					agencyView.updateData();
					memberView.updateData();
				} else {
					if (model.isLeafUser) return;
					agencyBaseViewStack.selectedChild = agencyStats;
					if (model.focusAgencyVo) {
						var evt:PcStatEvent = new PcStatEvent(PcStatEvent.GET_AGENCY_STATS_BY_ID);
						evt.agencyId = model.focusAgencyVo.id;
						evt.successCallback = onGetAgencyStatSuccess;
						evt.failureCallback = onGetAgencyStatFailure;
						this.enabled = false;
						evt.dispatch();
					}
				}
			}
			
			private function onGetAgencyStatSuccess(data:Object, evt:PcStatEvent):void {
				this.enabled = true;
				if (!data) return;
				datas.removeAll();
				var dp:ArrayCollection = data as ArrayCollection;
				if (dp.length == 0) return;
				var numericDataSort:Sort = new Sort(); 
				var dataSortField:SortField = new SortField(); 
				dataSortField.name = "code"; 
				dataSortField.numeric = true;
				numericDataSort.fields = [dataSortField];
				dp.sort = numericDataSort;
				dp.refresh();					
				
				for(var i:int = 0; i<dp.length; i++) {
					var vo:Object = dp.getItemAt(i);
					if (i > 0 ) {
						vo.name = "  " + vo.name; 
					}
					datas.addItem(vo);
				}
				
			
				
				//				agencystatsDG.dataProvider = dp;
			}
			
			private function onGetAgencyStatFailure(info:Object, evt:PcStatEvent):void {
				this.enabled = true;
			}		
			
			private function onExportToExcel():void {
				var memberEvt:PcMemberEvent = new PcMemberEvent(PcMemberEvent.EXPORT_MEMBERS_TO_EXCEL, null, model.focusAgencyVo.id);
				
				memberEvt.successCallback = onExportMemberSuccess;
				memberEvt.failureCallback = onExportMemberPlanFailure;	
				exportBtn.enabled = false;
				memberEvt.dispatch();
			}		
			
			private function onExportMemberSuccess(data:Object, memberEvt:PcMemberEvent):void {
				exportBtn.enabled = true;
				var filename = data as String;
				var url = 'tmp/' + filename;
				var u:URLRequest = new URLRequest(url);
				u.method = URLRequestMethod.GET;   
				navigateToURL(u,"_self");
			}	
			
			private function onExportMemberPlanFailure(data:Object, memberEvt:PcMemberEvent):void {
				exportBtn.enabled = true;
			}			
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<mx:ViewStack id="agencyBaseViewStack" width="100%" height="100%" creationPolicy="auto"
				  left="6" right="6" top="6" bottom="6">
		
		<mx:VBox id="agencyBase" width="100%" height="100%"
				 horizontalAlign="center" verticalAlign="middle"
				 horizontalScrollPolicy="off" verticalScrollPolicy="off">
			
			<mx:TabNavigator width="100%" height="100%">
				<agencyviews:AgencyView id="agencyView" width="100%" height="100%" 
										label="基本情况" agency="{agency}" editEnable="{editEnable}"/>
				<!--
				<agencyviews:ChildrenAgencyView id="childrenView" width="100%" height="100%"
												label="下级党组织管理" agency="{agency}"/>
				-->
				<partymember:PartyMemberView id="memberView" width="100%" height="100%" 
											 label="支委管理" agency="{agency}" editEnable="{editEnable}"/>
			</mx:TabNavigator>
		</mx:VBox>
		
		<mx:VBox id="agencyStats" width="100%" height="100%"
				 horizontalAlign="right" verticalAlign="middle"
				 horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:Button id="exportBtn"  click="onExportToExcel()" label="导出下级支委委员" />
			<mx:AdvancedDataGrid id="agencystatsDG" designViewDataType="flat"   
								 width="100%" height="100%" color="0x323232"  
								 minWidth="640" minHeight="480" dataProvider="{datas}"
								 sortableColumns="false" sortExpertMode="true"
								 variableRowHeight="true"
								 >  
				<mx:groupedColumns>   
					
					<mx:AdvancedDataGridColumn dataField="name" width="160" headerText="组织名称" textAlign="left" headerWordWrap="true" wordWrap="true"/>
					<mx:AdvancedDataGridColumn dataField="zzNum" headerText="组织总数" width="80" headerWordWrap="true" textAlign="right"/>
					<mx:AdvancedDataGridColumn dataField="jcNum" headerText="基层党委数" width="100" headerWordWrap="true" textAlign="right"/>
					<mx:AdvancedDataGridColumn dataField="ejdwNum" headerText="二级党委数量" width="80" headerWordWrap="true" textAlign="right"/>
					<mx:AdvancedDataGridColumn dataField="dzjNum" headerText="党总支数量" width="80" headerWordWrap="true" textAlign="right"/>
					<mx:AdvancedDataGridColumn dataField="dzbNum" headerText="党支部数量" width="80" headerWordWrap="true" textAlign="right"/>
					<mx:AdvancedDataGridColumn dataField="zbsjNum" headerText="支部书记数" width="80" headerWordWrap="true" textAlign="right" />
					<mx:AdvancedDataGridColumn dataField="zbfsjNum" headerText="支部副书记数" width="100" headerWordWrap="true" textAlign="right"/>  
		
				</mx:groupedColumns>  
			</mx:AdvancedDataGrid>
		</mx:VBox>
	</mx:ViewStack>
</navigation:NavigationView>
