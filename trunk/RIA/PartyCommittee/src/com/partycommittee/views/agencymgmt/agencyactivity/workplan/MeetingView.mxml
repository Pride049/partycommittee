<?xml version="1.0" encoding="utf-8"?>
<control:EscapeWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx" 
					  xmlns:control="com.partycommittee.control.*"
					  horizontalAlign="center" verticalAlign="middle"
					  showCloseButton="true" titleStyleName="panelTitle"
					  close="PopupMgr.instance.removeWindow(this)" 
					  height="650" width="500"
					  creationComplete="onCreationCompleted()"
					  xmlns:button="com.partycommittee.control.button.*" 
					  xmlns:richtexttoolbar="com.partycommittee.control.richtexttoolbar.*" 
					  xmlns:component="com.partycommittee.views.agencymgmt.agencyactivity.workplan.component.*">
	<fx:Script>
		<![CDATA[
			import com.partycommittee.events.PcMeetingEvent;
			import com.partycommittee.events.PcWorkPlanEvent;
			import com.partycommittee.manager.popup.PopupMgr;
			import com.partycommittee.util.CRUDEventType;
			import com.partycommittee.util.DataproviderFactory;
			import com.partycommittee.util.WorkPlanCodeUtil;
			import com.partycommittee.vo.PcAgencyVo;
			import com.partycommittee.vo.PcMeetingContentVo;
			import com.partycommittee.vo.PcMeetingVo;
			import com.partycommittee.vo.PcWorkPlanContentVo;
			import com.partycommittee.vo.PcWorkPlanVo;
			
			import flashx.textLayout.debug.assert;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			
			private var isNew:Boolean = true;
			
			[Bindable]
			private var year:Number;
			[Bindable]
			private var quarter:Number = 1;
			
			private var _meetingType:Number;
			[Bindable]
			public function get meetingType():Number {
				return this._meetingType;
			}
			public function set meetingType(value:Number):void {
				this._meetingType = value;
			}
			
			private var _meeting:PcMeetingVo;
			[Bindable]
			public function get meeting():PcMeetingVo {
				return this._meeting;
			}
			public function set meeting(value:PcMeetingVo):void {
				this._meeting = value;
			}
			
			private var _agency:PcAgencyVo;
			[Bindable]
			public function get agency():PcAgencyVo {
				return this._agency;
			}
			public function set agency(value:PcAgencyVo):void {
				this._agency = value;
			}
			
			private var _parentView:MeetingListView;
			[Bindable]
			public function get parentView():MeetingListView {
				return this._parentView;
			}
			public function set parentView(value:MeetingListView):void {
				this._parentView = value;
			}
			
			private function onCreationCompleted():void {
				updateData();
			}
			
			private function updateData():void {
				if (!agency || !meeting) {
					return;
				}
				
				year = meeting.year;
				quarter = meeting.quarter;
				
				switch (meetingType) {
					case PCConst.WORKPLAN_TYPE_CLASS:
						title = "党课";
						break;
					case PCConst.WORKPLAN_TYPE_MEETING_BRANCH_COMMITTEE:
						title = "支部委员会";
						break;
					case PCConst.WORKPLAN_TYPE_MEETING_BRANCH_LIFE:
						title = "支部生活会";
						break;
					case PCConst.WORKPLAN_TYPE_MEETING_BRANCH_MEMBER:
						title = "支部党员大会";
						break;
					case PCConst.WORKPLAN_TYPE_MEETING_OTHER:
						title = "其他会议";
						break;
//					case PCConst.WORKPLAN_TYPE_MEETING_TEAM:
//						break;
				}
				
				if (meetingType == PCConst.WORKPLAN_TYPE_MEETING_OTHER) {
					meetingTitleBox.visible = meetingTitleBox.includeInLayout = false;
					otherMeetingTitleBox.visible = otherMeetingTitleBox.includeInLayout = true;
				} else {
					meetingTitleBox.visible = meetingTitleBox.includeInLayout = true;
					otherMeetingTitleBox.visible = otherMeetingTitleBox.includeInLayout = false;
				}
				
				if (meeting.id) {
					isNew = false;
					meetingNameTxt.text = meeting.meetingName;
					dateField.selectedDate = meeting.meetingDatetime;
					themeTxt.text = meeting.theme;
					attendTxt.text = meeting.attend + "";
					asenceTxt.text = meeting.asence + "";
					if (meeting.content) {
						personTxt.text = meeting.content.memberName;
						textArea.htmlText = meeting.content.content;
					} else {
						loadMeetingContent();
					}
				} else {
					isNew = true;
				}
			}
			
			private function loadMeetingContent():void {
				var evt:PcMeetingEvent = new PcMeetingEvent(PcMeetingEvent.GET_MEETING_CONTENT);
				evt.meeting = meeting;
				evt.successCallback = onLoadContentSuccess;
				evt.failureCallback = onLoadContentFailure;
				this.enabled = false;
				evt.dispatch();
			}
			
			private function onLoadContentSuccess(data:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				meeting.content = data as PcMeetingContentVo;
				personTxt.text = meeting.content.memberName;
				textArea.htmlText = meeting.content.content;
			}
			
			private function onLoadContentFailure(info:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				Alert.show("读取会议内容失败！");
			}
			
			private function onSaveAndCommit():void {
				if (!isNew) {
					doUpdate(true);
				} else {
					doCreate(true);
				}
			}
			
			private function onSaveWithoutSubmit():void {
				if (!isNew) {
					doUpdate();
				} else {
					doCreate();
				}
			}
			
			private function doUpdate(isCommit:Boolean = false):void {
				var meetingEvt:PcMeetingEvent = new PcMeetingEvent(CRUDEventType.UPDATE);
				meeting = getUpdateMeeting();
				meeting.statusId = isCommit ? 1 : 2;
				meetingEvt.meeting = meeting;
				meetingEvt.successCallback = onMeetingUpdateSuccess;
				meetingEvt.failureCallback = onMeetingUpdateFailure;
				this.enabled = false;
				meetingEvt.dispatch();
			}
			
			private function doCreate(isCommit:Boolean = false):void {
				var meetingEvt:PcMeetingEvent = new PcMeetingEvent(CRUDEventType.CREATE);
				var newMeeting:PcMeetingVo = getNewMeeting();
				newMeeting.statusId = isCommit ? 1 : 2;
				meetingEvt.meeting = newMeeting;
				meetingEvt.successCallback = onMeetingCreateSuccess;
				meetingEvt.failureCallback = onMeetingCreateFailure;
				this.enabled = false;
				meetingEvt.dispatch();
			}
			
			private function onMeetingCreateSuccess(data:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				parentView.updateData();
				this.close();
			}
			
			private function onMeetingCreateFailure(info:Object, evt:PcMeetingEvent):void {
				this.enabled = true;
				Alert.show("保存会议内容失败！");
			}
			
			private function onMeetingUpdateSuccess(data:Object, workPlanEvt:PcMeetingEvent):void {
				this.enabled = true;
				parentView.updateData();
				this.close();
			}
			
			private function onMeetingUpdateFailure(info:Object, workPlanEvt:PcMeetingEvent):void {
				this.enabled = true;
				Alert.show("修改会议内容失败！");
			}
			
			private function getNewMeeting():PcMeetingVo {
				var newMeeting:PcMeetingVo = new PcMeetingVo();
				newMeeting.meetingName = meetingNameTxt.text;
				newMeeting.typeId = meetingType;
				newMeeting.year = year;
				newMeeting.quarter = quarter;
				newMeeting.agencyId = agency.id;
				newMeeting.moderator = personTxt.text;
				newMeeting.theme = themeTxt.text;
				newMeeting.attend = Number(attendTxt.text);
				newMeeting.asence = Number(asenceTxt.text);
				newMeeting.content = getMeetingContent();
				newMeeting.meetingDatetime = dateField.selectedDate;
				return newMeeting;
			}
			
			private function getUpdateMeeting():PcMeetingVo {
				meeting.meetingName = meetingNameTxt.text;
				meeting.meetingDatetime = dateField.selectedDate;
				meeting.theme = themeTxt.text;
				meeting.moderator = personTxt.text;
				meeting.attend = Number(attendTxt.text);
				meeting.asence = Number(asenceTxt.text);
				meeting.content.memberName = personTxt.text;
				meeting.content.content = textArea.htmlText;
				return meeting;
			}
			
			private function getMeetingContent():PcMeetingContentVo {
				var meetingContent:PcMeetingContentVo = new PcMeetingContentVo();
				meetingContent.content = textArea.htmlText;
				meetingContent.memberName = personTxt.text;
				meetingContent.type = PCConst.WORKFLOW_TYPE_REPORT;
				return meetingContent;
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<mx:VBox width="100%" height="100%"
			 left="6" right="6" top="6" bottom="6"
			 horizontalScrollPolicy="off" verticalScrollPolicy="off">
		<mx:HBox id="meetingTitleBox" width="100%" horizontalAlign="center"
				 horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:Label fontSize="20" fontWeight="bold" text="{year + '年度第' + quarter + '季度' + title}"/>
			<mx:Label fontSize="20" fontWeight="bold"
					  text="{(meeting &amp;&amp; meeting.statusId == 1) ? ' （已上报）' : ''}"/>
		</mx:HBox>
		<mx:HBox id="otherMeetingTitleBox" width="100%" horizontalAlign="center"
				 horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:Label text="会议名称:" width="75"/>
			<mx:TextInput id="meetingNameTxt" width="100%"/>
		</mx:HBox>
		<mx:HBox width="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:HBox width="50%"
					 horizontalScrollPolicy="off" verticalScrollPolicy="off">
				<mx:Label text="时    间:" width="75"/>
				<mx:DateField id="dateField" width="100%"
							  formatString="YYYY-MM-DD"/>
			</mx:HBox>
			<mx:HBox width="50%"
					 horizontalScrollPolicy="off" verticalScrollPolicy="off">
				<mx:Label text="授课人:" width="75"/>
				<mx:TextInput id="personTxt" width="100%"/>
			</mx:HBox>
		</mx:HBox>
		<mx:HBox width="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:Label text="内    容:" width="75"/>
			<mx:TextInput id="themeTxt" width="100%"/>
		</mx:HBox>
		<mx:HBox width="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:HBox width="50%"
					 horizontalScrollPolicy="off" verticalScrollPolicy="off">
				<mx:Label text="应到人数:" width="75"/>
				<mx:TextInput id="attendTxt" width="100%" restrict="0-9"/>
			</mx:HBox>
			<mx:HBox width="50%"
					 horizontalScrollPolicy="off" verticalScrollPolicy="off">
				<mx:Label text="缺席人数:" width="75"/>
				<mx:TextInput id="asenceTxt" width="100%" editable="false"
							  text="{asenceBox.asenceNumber + ''}"/>
			</mx:HBox>
		</mx:HBox>
		<mx:HBox width="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:Label text="缺席人名单:" width="75"/>
			<component:ChooseAsenceBox id="asenceBox" width="100%" meeting="{meeting}"/>
		</mx:HBox>
		<richtexttoolbar:PopupRichTextToolBar width="100%" target="{textArea}"/>
		<mx:TextArea id="textArea" width="100%" height="100%"
					 editable="{!meeting || meeting.statusId == 2}"/>
		<mx:ControlBar width="100%" horizontalAlign="center" verticalAlign="middle">
			<button:PcButton label="暂存" click="onSaveWithoutSubmit()"
							 enabled="{!meeting || meeting.statusId == 2}"/>
			<button:PcButton label="上报" click="onSaveAndCommit()"
							 enabled="{!meeting || meeting.statusId != 1}"/>
			<button:PcButton label="关闭" click="close()"/>
		</mx:ControlBar>
	</mx:VBox>
	
</control:EscapeWindow>
