<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   styleName="mainCanvas"
		   width="100%" height="100%" 
		   xmlns:button="com.partycommittee.control.button.*" 
		   xmlns:datagrid="com.partycommittee.control.datagrid.*"
		   xmlns:navigation="com.partycommittee.manager.navigation.*">
	
	<fx:Script>
		<![CDATA[
			import com.partycommittee.control.tree.classes.Node;
			import com.partycommittee.events.PcMemberEvent;
			import com.partycommittee.manager.popup.PopupMgr;
			import com.partycommittee.model.ModelLocator;
			import com.partycommittee.util.CRUDEventType;
			import com.partycommittee.util.LblFunctionHelper;
			import com.partycommittee.vo.PcAgencyVo;
			import com.partycommittee.vo.PcMemberVo;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DataGrid;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.events.CollectionEvent;
			import mx.events.CollectionEventKind;
			import mx.events.PropertyChangeEvent;
			import mx.managers.PopUpManager;
			
			[Bindable]
			private var model:ModelLocator = ModelLocator.getInstance();
			
			[Bindable]
			private var dp:ArrayCollection = new ArrayCollection();
			
			private var _agency:PcAgencyVo;
			public function set agency(value:PcAgencyVo):void {
				this._agency = value;
				updateData();
			}
			[Bindable]
			public function get agency():PcAgencyVo {
				return this._agency;
			}
			
			public function updateData():void {
				if (!agency || agency.codeId == 10 || agency.codeId == 13) {
					this.enabled = false;
					return;
				}
				this.enabled = true;
				var selectedNode:Node = model.tree.selectedItem as Node;
				if (!selectedNode.initialized) {
					model.tree.fetchChildrenData(selectedNode);
				} else {
					updateDp();
				}
			}
			
			private function updateDp():void {
				var selectedNode:Node = model.tree.selectedItem as Node;
				dp = (selectedNode.entity as PcAgencyVo).children;
			}
			
			private function printDg():void {
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<mx:VBox width="100%" height="100%"
			 horizontalScrollPolicy="off" verticalScrollPolicy="off">
		<mx:AdvancedDataGrid id="datagrid" width="100%" height="100%" 
							 headerStyleName="dataGridHeader"
							 allowMultipleSelection="true"
							 dataProvider="{dp}">
			<mx:columns>
				<mx:AdvancedDataGridColumn headerText="党组织性质" dataField="codeId" 
										   labelFunction="{LblFunctionHelper.agencyCodeLblFunc}"/>
				<mx:AdvancedDataGridColumn headerText="组织名称" dataField="name"/>
				<mx:AdvancedDataGridColumn headerText="组织负责人" dataField="person"/>
				<mx:AdvancedDataGridColumn headerText="电话号码" dataField="tel"/>
				<mx:AdvancedDataGridColumn headerText="操作" 
										   itemRenderer="com.partycommittee.views.agencymgmt.renderers.OperationColRenderer"/>
			</mx:columns>
		</mx:AdvancedDataGrid>
		<mx:ControlBar width="100%" horizontalAlign="right">
			<button:PcButton label="打印党支部工作手册" click="printDg()"/>
		</mx:ControlBar>
	</mx:VBox>
	
</mx:Canvas>
