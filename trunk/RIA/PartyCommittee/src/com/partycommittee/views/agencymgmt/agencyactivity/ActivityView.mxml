<?xml version="1.0" encoding="utf-8"?>
<navigation:NavigationView xmlns:fx="http://ns.adobe.com/mxml/2009" 
						   xmlns:s="library://ns.adobe.com/flex/spark" 
						   xmlns:mx="library://ns.adobe.com/flex/mx"
						   styleName="mainCanvas"
						   width="100%" height="100%" 
						   creationComplete="onCreationCompleted()"
						   xmlns:navigation="com.partycommittee.manager.navigation.*" 
						   xmlns:component="com.partycommittee.views.agencymgmt.component.*" 
						   xmlns:agencyactivity="com.partycommittee.views.agencymgmt.agencyactivity.*">
	<fx:Script>
		<![CDATA[
			import com.partycommittee.model.ModelLocator;
			import com.partycommittee.util.UserUtil;
			import com.partycommittee.views.MainContainer;
			
			import mx.events.PropertyChangeEvent;
			
			[Bindable]
			private var model:ModelLocator = ModelLocator.getInstance();
			
			private var _toIndex:int;
			
			public function get toIndex():int
			{
				return _toIndex;
			}

			public function set toIndex(value:int):void
			{
				_toIndex = value;
			}

			private function onCreationCompleted():void {
				
//				var obj:Object = this.parent.parent.parent.parent as MainContainer;
//				if (obj.mainViewStack  &&  obj.mainViewStack.selectedChild == "activityView") {
//					onNavigateIn();
//				}	
			}
			
			private function onModelChanged(event:PropertyChangeEvent):void {
				if (event.property == "focusAgencyVo") {
					updateData();
				}
			}
			
			override protected function onNavigateIn():void {
				model.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE, onModelChanged);
				updateData();
			}
			
			override protected function onNavigateOut():void {
				model.removeEventListener(PropertyChangeEvent.PROPERTY_CHANGE, onModelChanged);
			}			
			
			public function updateData():void {
				tab.removeAll();
				if (model.isLeafUser && model.focusAgencyVo.id != parseFloat(model.loginUser.privilege)) return;
				if (model.focusAgencyVo.codeId == 10) {
					var reportView:ReportView = new ReportView();
					reportView.yearCmb = yearCmb;
					reportView.label = "组织生活";
					reportView.percentHeight = 100;
					reportView.percentWidth = 100;
					reportView.tab = this.tab;
					reportView.toIndex = toIndex;
					tab.addChild(reportView);
					if (UserUtil.checkRole(2, model.loginUser.roles) == false) {
						reportView.enableReport = false;
					}
				} else {
					var browseView:BrowseView = new BrowseView();
					browseView.yearCmb = yearCmb;
					browseView.label = "组织生活";
					browseView.percentHeight = 100;
					browseView.percentWidth = 100;
					browseView.tab = this.tab;
					tab.addChild(browseView);	
				}

			}			

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<mx:TabNavigator id="tab" width="100%" height="100%" >
	</mx:TabNavigator>
	
	<mx:HBox id="year_hbox" right="10" top="2" >
		<mx:Label text="选择年份:"/>
		<mx:ComboBox id="yearCmb"/>
	</mx:HBox>	
</navigation:NavigationView>
