<?xml version="1.0" encoding="utf-8"?>
<navigation:NavigationView xmlns:fx="http://ns.adobe.com/mxml/2009" 
						   xmlns:s="library://ns.adobe.com/flex/spark" 
						   xmlns:mx="library://ns.adobe.com/flex/mx"
						   styleName="mainCanvas"
						   width="100%" height="100%" 
						   xmlns:navigation="com.partycommittee.manager.navigation.*" 
						   creationComplete="onCreationCompleted()">
	<fx:Script>
		<![CDATA[
			import com.partycommittee.events.PcMeetingEvent;
			import com.partycommittee.events.PcWorkPlanEvent;
			import com.partycommittee.model.ModelLocator;
			import com.partycommittee.util.LblFunctionHelper;
			import com.partycommittee.vo.PcAgencyVo;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.PropertyChangeEvent;
			
			[Bindable]
			private var model:ModelLocator = ModelLocator.getInstance();
			
			[Bindable]
			private var dp:ArrayCollection = new ArrayCollection();
			
			private function onCreationCompleted():void {
				onNavigateIn();
				model.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE, onPropertyChanged);
			}
			
			private function onPropertyChanged(event:PropertyChangeEvent):void {
				if (event.property == "loginUser") {
					model.removeEventListener(PropertyChangeEvent.PROPERTY_CHANGE, onPropertyChanged);
					onNavigateIn();
				}
			}
			
			override protected function onNavigateIn():void {
				dp = new ArrayCollection();
				if (model.loginUser && model.loginUser.privilege != "") {
					var rootAgencyId:Number = model.loginUser.privilege.split(',')[0] as Number;
					var pcWorkPlanEvt:PcWorkPlanEvent = new PcWorkPlanEvent(PcWorkPlanEvent.GET_ALERT_INFO);
					var agency:PcAgencyVo = new PcAgencyVo();
					agency.id = rootAgencyId;
					pcWorkPlanEvt.agency = agency;
					pcWorkPlanEvt.year = new Date().getFullYear();
					pcWorkPlanEvt.quarter = getQuarter();
					pcWorkPlanEvt.successCallback = onGetWorkPlanAlertSuccess;
					pcWorkPlanEvt.failureCallback = onGetWorkPlanAlertFailure;
					pcWorkPlanEvt.dispatch();
				}
			}
			
			private function onGetWorkPlanAlertSuccess(data:Object, evt:PcWorkPlanEvent):void {
				dp.addAll(data as ArrayCollection);
				var pcMeetingEvt:PcMeetingEvent = new PcMeetingEvent(PcMeetingEvent.GET_ALERT_INFO);
				var agency:PcAgencyVo = new PcAgencyVo();
				agency.id = model.loginUser.privilege.split(',')[0] as Number;
				pcMeetingEvt.agency = agency;
				pcMeetingEvt.year = new Date().getFullYear();
				pcMeetingEvt.quarter = getQuarter();
				pcMeetingEvt.successCallback = onGetMeetingAlertSuccess;
				pcMeetingEvt.failureCallback = onGetMeetingAlertFailure;
				pcMeetingEvt.dispatch();
			}
			
			private function onGetWorkPlanAlertFailure(info:Object, evt:PcWorkPlanEvent):void {
				Alert.show(info.toString());
			}
			
			private function onGetMeetingAlertSuccess(data:Object, evt:PcMeetingEvent):void {
				dp.addAll(data as ArrayCollection);
			}
			
			private function onGetMeetingAlertFailure(info:Object, evt:PcMeetingEvent):void {
				Alert.show(info.toString());
			}
			
			override protected function onNavigateOut():void {
			}
			
			private function getQuarter():Number {
				var month:Number = new Date().getMonth();
				if (month <= 3) {
					return 1;
				} else if (month <= 6) {
					return 2;
				} else if (month <= 9) {
					return 3;
				} else {
					return 4;
				}
			}
			
			private function statusLblFunc(item:Object, col:*):String {
				if (!item.hasOwnProperty('statusId')) {
					return "";
				}
				switch (item.statusId as Number) {
					case 0:
						return "未填写";
					case 1:
						return "已上报";
					case 2:
						return "未上报";
				}
				return "";
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<mx:AdvancedDataGrid id="dg" dataProvider="{dp}" width="100%" height="100%">
		<mx:columns>
			<mx:AdvancedDataGridColumn headerText="内容" dataField="typeId"
									   labelFunction="{LblFunctionHelper.workPlanTypeLblFunc}"/>
			<mx:AdvancedDataGridColumn headerText="状态" dataField="statusId"
									   labelFunction="statusLblFunc"/>
		</mx:columns>
	</mx:AdvancedDataGrid>
	
</navigation:NavigationView>
